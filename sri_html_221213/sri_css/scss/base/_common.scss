// @include flexbox($placeItems: flex-start); 
// @include flexbox($placeItems: flex-end); 
// @include flexbox($placeItems: center); 
// @include flexbox($placeContent: flex-start);
// @include flexbox($placeContent: flex-end);
//@include flexbox($placeContent: center);

@mixin flexbox(
    $display: flex,
    $direction: row,
    $placeContent: null,
    $placeItems: null,
    $wrap: nowrap,
    $shrink: 0,
    $grow: 0,
    $alignContent: null,
    $justifyContent: null,
    $alignItems: null,
    $justifyItems: null) {

    display: $display;
    flex-direction: $direction;

    @if $placeContent ==null {
        @if $alignContent {
            align-content: $alignContent;
        }

        @if $justifyContent {
            justify-content: $justifyContent;
        }
    }

    @else {
        place-content: $placeContent;
    }

    @if $placeItems ==null {
        @if $alignItems {
            align-items: $alignItems;
        }

        @if $justifyItems {
            justify-items: $justifyItems;
        }
    }

    @else {
        place-items: $placeItems;
    }

    flex-wrap: $wrap;
    flex-shrink: $shrink;
    flex-grow: $grow;
}
@mixin clearfix {
    &::after {
        content: "";
        display: table;
        table-layout: fixed;
        clear: both;        
    }
}

@mixin prefix($property, $value) {
    -webkit-#{$property}: $value;
    -moz-#{$property}: $value;
    -ms-#{$property}: $value;
    -o-#{$property}: $value;
    #{$property}: $value;
}
@mixin border-radius($radius: 5px) {
    @include prefix("border-radius", $radius);
}
@mixin xPos($x) {
    -webkit-transform: translateX($x);
    -moz-transform: translateX($x);
    -ms-transform: translateX($x);
    transform: translateX($x);
}
@mixin vertical-align {
    position: relative;
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
}

@mixin transform($transforms) {
    -webkit-transform: $transforms;
    -moz-transform: $transforms;
    -ms-transform: $transforms;
    transform: $transforms;
}

// Rotate
@mixin rotate ($deg) {
    @include transform(rotate(#{$deg}deg));
}
// Translate
@mixin translate ($x, $y) {
    @include transform(translate($x, $y));
}

// Transform Origin
@mixin transform-origin ($origin) {
    -webkit-transform-origin: $origin;
    -moz-transform-origin: $origin;
    -ms-transform-origin: $origin;
    transform-origin: $origin;
}

/*투명도 믹스인*/
@mixin opacity($opacity) {
    opacity: $opacity;
    $opacityIE: $opacity * 100;
    filter: alpha(opacity=$opacityIE);
}

/*포지션 믹스인*/
//@include Position($top: 0, $left: 0)
@mixin position($position: absolute, $top: null, $right: null, $bottom: null, $left: null){
    position: $position;
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
}

/*백그라운드 믹스인*/
//@include Background($sprite:'error', $type:'png', $position:right center); ---  사용법
//@include Background($sprite:'error', $type:'jpg', $y:0); ---  사용법
//@include Background($sprite:'error', $type:'jpg', $position:20% 20%, $size:100%); ---  사용법
@mixin background($sprite,
    $type: "png",
    $position: 0 0,
    $size: auto,
    $path: "icons"

) {
    background-repeat: no-repeat;
    background-image: url("../../resources-pc/images/#{$path}/#{$sprite}.#{$type}");
    background-position: $position;
    background-size: $size;
}

@mixin bg-opacity($color, $opacity) {
    background: $color;
    background: rgba($color, $opacity);
}

/* 말줄임표 */
// 인자 값의 기본 값은 1
// @include Ellipsis($w:100px, $lines:2); --- 사용법
@mixin ellipsis($w: 100%, $lines: 1, $display: block) {
    @if ($lines ==1) {
        width: $w;
        display: $display;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    @else {
        width: $w;
        display: block;
        display: -webkit-box;
        overflow: hidden;
        text-overflow: ellipsis;
        -webkit-line-clamp: $lines;
        -webkit-box-orient: vertical;
        word-break: break-all;
    }
}

@mixin box-sizing($box-model) {
    -webkit-box-sizing: $box-model; // Safari <= 5
    -moz-box-sizing: $box-model; // Firefox <= 19
    box-sizing: $box-model;
}

@mixin round-inline-box($w: auto) {
    width: $w;    
    @include flexbox($display: inline-flex, $placeItems: center);
    @include box-sizing(border-box);
    @include border-radius(4px);
}

img{width:100%;height:auto}